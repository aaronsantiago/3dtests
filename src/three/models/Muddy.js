/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'
import * as THREE from "three"

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('models/muddy/muddy.gltf')
  const { actions } = useAnimations(animations, group)
  console.log(animations);
  useEffect(() => {
    for (let action in actions) {
      let a = actions[action].play();
      a.setLoop(THREE.LoopOnce);
      a.clampWhenFinished = true;
      setInterval(() => {
        a.reset();
      }, 9000);
    }
  },[])
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 5.61, 2.41]} rotation={[-3.02, -0.94, 0.11]}>
      {/* <PerspectiveCamera rotation={[Math.PI,0,0]} makeDefault={true} far={25000} near={0.2} fov={54.4} rotation={[-Math.PI / 2, 0, 0]} /> */}

        <primitive object={nodes.topJoint} />
        <skinnedMesh
          geometry={nodes.BASE_Low_Poly_Man.geometry}
          material={materials.PropsPBR_27}
          skeleton={nodes.BASE_Low_Poly_Man.skeleton}
        />
        <skinnedMesh
          geometry={nodes.necklace.geometry}
          material={materials.PropsPBR_28}
          skeleton={nodes.necklace.skeleton}
        />
        <skinnedMesh
          geometry={nodes.chestpiece.geometry}
          material={materials.PropsPBR_29}
          skeleton={nodes.chestpiece.skeleton}
        />
        <skinnedMesh
          geometry={nodes.pauldrons.geometry}
          material={materials.PropsPBR_30}
          skeleton={nodes.pauldrons.skeleton}
        />
        <skinnedMesh
          geometry={nodes.helmet.geometry}
          material={materials.PropsPBR_31}
          skeleton={nodes.helmet.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Layer_6.geometry}
          material={materials.PropsPBR_32}
          skeleton={nodes.Layer_6.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Layer_7.geometry}
          material={materials.PropsPBR_33}
          skeleton={nodes.Layer_7.skeleton}
        />
      </group>
      <group position={[0, -0.11, 0]} scale={[2.47, 0.11, 2.47]}>
        <mesh geometry={nodes['Cylinder_1x0,25_LOD0'].geometry} material={materials.PropsPBR} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD1'].geometry} material={materials.PropsPBR_1} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD2'].geometry} material={materials.PropsPBR_2} />
      </group>
      <group position={[0, -0.51, 0]} scale={[10.14, 0.47, 10.14]}>
        <mesh geometry={nodes['Cylinder_1x0,25_LOD0_1'].geometry} material={materials.PropsPBR_3} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD1_1'].geometry} material={materials.PropsPBR_4} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD2_1'].geometry} material={materials.PropsPBR_5} />
      </group>
      <group position={[0.32, 1.81, 1.59]} rotation={[0.24, -0.03, 0.21]} scale={[0.28, 0.11, 0.28]}>
        <mesh geometry={nodes['Cylinder_1x0,25_LOD0_2'].geometry} material={materials.PropsPBR_14} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD1_2'].geometry} material={materials.PropsPBR_15} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD2_2'].geometry} material={materials.PropsPBR_16} />
      </group>
      <group position={[-0.03, 1.04, 0.97]} rotation={[0, -0.01, 0]} scale={[0.28, 0.07, 0.28]}>
        <mesh geometry={nodes['Cylinder_1x0,25_LOD0_3'].geometry} material={materials.PropsPBR_17} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD1_3'].geometry} material={materials.PropsPBR_18} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD2_3'].geometry} material={materials.PropsPBR_19} />
      </group>
      <group position={[-0.25, 1.04, 0.93]} rotation={[0, -0.3, 0]} scale={[0.28, 0.03, 0.28]}>
        <mesh geometry={nodes['Cylinder_1x0,25_LOD0_4'].geometry} material={materials.PropsPBR_20} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD1_4'].geometry} material={materials.PropsPBR_21} />
        <mesh geometry={nodes['Cylinder_1x0,25_LOD2_4'].geometry} material={materials.PropsPBR_22} />
      </group>
      <group position={[-0.43, 1.11, 0.84]} rotation={[0, -0.54, 0]} scale={0.13}>
        <mesh geometry={nodes.Tube_LOD0.geometry} material={materials.PropsPBR_23} />
        <mesh geometry={nodes.Tube_LOD1.geometry} material={materials.PropsPBR_24} />
        <mesh geometry={nodes.Tube_LOD2.geometry} material={materials.PropsPBR_25} />
        <mesh geometry={nodes.Tube_LOD3.geometry} material={materials.PropsPBR_26} />
      </group>
      <group position={[0.49, 1.77, 0.39]} rotation={[-3, -0.01, -2.87]} scale={0.3}>
        <pointLight intensity={1.5} decay={2} color="#97b9ff" rotation={[-Math.PI / 2, 0, 0]} />
      </group>
      <directionalLight
        intensity={1}
        decay={2}
        color="#0fe0b7"
        rotation={[-2.04, 0.5, 2.04]}
        scale={[1.06, 1.06, 1.06]}
      />
      <mesh
        geometry={nodes['Chamferbox_(5)'].geometry}
        material={materials.PropsPBR_6}
        position={[0.21, 0.98, 0.69]}
        rotation={[0, 0.41, 0]}
        scale={0.13}>
        <mesh geometry={nodes.ChamferboxCrack_LOD1.geometry} material={materials.PropsPBR_7} />
      </mesh>
      <mesh
        geometry={nodes['Sphere_(6)'].geometry}
        material={materials.PropsPBR_8}
        position={[-0.02, 0.98, 0.74]}
        scale={0.14}>
        <mesh geometry={nodes.Spherabox_Collision.geometry} material={materials.PropsPBR_9} />
      </mesh>
      <mesh
        geometry={nodes['SphereInv_(7)'].geometry}
        material={materials.PropsPBR_10}
        position={[-0.25, 0.99, 0.68]}
        rotation={[0, -0.48, 0]}
        scale={0.14}>
        <mesh geometry={nodes.Spherabox_Collision_1.geometry} material={materials.PropsPBR_11} />
      </mesh>
      <mesh
        geometry={nodes['ChamferboxCrack_(0)'].geometry}
        material={materials.PropsPBR_12}
        position={[0.38, 1.1, 0.85]}
        rotation={[0, 0.54, 0]}
        scale={0.12}>
        <mesh geometry={nodes.ChamferboxCrack_LOD1_1.geometry} material={materials.PropsPBR_13} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/muddy.gltf')
